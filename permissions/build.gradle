apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'org.jetbrains.dokka'

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.core:core-ktx:1.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    archiveClassifier.set('sources')
}

task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
    outputFormat = 'javadoc'
    outputDirectory = "$buildDir/javadoc"
}

task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
    from dokkaJavadoc.outputDirectory
    archiveClassifier.set('javadoc')
}

publishing {
    publications {
        Production(MavenPublication) {
            artifact sourcesJar
            artifact javadocJar
            artifact("$buildDir/outputs/aar/permissions-release.aar")

            groupId 'net.novate.androidx'
            artifactId 'permissions'
            version android.defaultConfig.versionName

            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')

                configurations.implementation.allDependencies.each {
                    if (it.name != 'unspecified') {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
}

bintray {
    user = getLocalProperties('bintray.user')
    key = getLocalProperties('bintray.key')
    publications = ['Production']
    pkg {
        repo = 'androidx'
        name = 'permissions'
        userOrg = 'novate'
        licenses = ['Apache-2.0']
        websiteUrl = 'https://github.com/GavinNovate/Permissions.git'
        issueTrackerUrl = 'https://github.com/GavinNovate/Permissions/issues'
        vcsUrl = 'https://github.com/GavinNovate/Permissions.git'
        version {
            name = android.defaultConfig.versionName
            released = new Date()
            vcsTag = "androidx-v${android.defaultConfig.versionName}"
        }
    }
}

bintrayUpload.dependsOn assemble

String getLocalProperties(String key) {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    properties.getProperty(key)
}